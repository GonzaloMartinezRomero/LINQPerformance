<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4WlBCuFpQVDhaUGU4WlBxuFp
        QeThaUHu4WlB7uFpQeThaUHK4WlBnOFpQVrhaUEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4WlBHOFpQZDhaUHw4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQfbhaUGe4WlBKAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4WlBBOFpQXzhaUH04WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH64WlBkOFp
        QQwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOFpQRjhaUHE4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB1uFpQSgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADhaUEi4WlB3uFp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB7OFpQTYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4WlBGOFp
        Qd7haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB7OFpQSoAAAAAAAAAAAAAAAAAAAAAAAAAAOFp
        QQThaUHA4WlB/+FpQf/haUHi4WlBauFpQWrhaUHK4WlBxOFpQWrhaUF64WlB/+FpQYLhaUFq4WlBxuFp
        QcrhaUFq4WlBfuFpQf/haUGI4WlBauFpQZLhaUH/4WlB/+FpQf/haUH/4WlB2OFpQQwAAAAAAAAAAAAA
        AAAAAAAA4WlBdOFpQf/haUH/4WlB/+FpQc4AAAAAAAAAAOFpQabhaUGeAAAAAOFpQRzhaUH/4WlBKgAA
        AADhaUGc4WlBpAAAAADhaUEi4WlB/+FpQTIAAAAA4WlBQuFpQf/haUH/4WlB/+FpQf/haUH/4WlBlgAA
        AAAAAAAAAAAAAOFpQRbhaUHw4WlB/+FpQf/haUH/4WlBzgAAAAAAAAAA4WlBpuFpQaAAAAAA4WlBHOFp
        Qf/haUEqAAAAAOFpQZzhaUGkAAAAAOFpQSLhaUH/4WlBMgAAAADhaUFC4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH64WlBLgAAAAAAAAAA4WlBhOFpQf/haUH/4WlB/+FpQf/haUHOAAAAAAAAAADhaUGm4WlBogAA
        AADhaUEg4WlB/+FpQSoAAAAA4WlBnOFpQaQAAAAA4WlBIuFpQf/haUEyAAAAAOFpQULhaUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUGmAAAAAOFpQQThaUHo4WlB/+FpQf/haUH/4WlB/+FpQdAAAAAAAAAAAOFp
        QabhaUGkAAAAAOFpQSLhaUH/4WlBKgAAAADhaUGc4WlBpAAAAADhaUEi4WlB/+FpQTIAAAAA4WlBQuFp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQfjhaUEU4WlBQuFpQf/haUH/4WlB/+FpQf/haUH/4WlB1OFp
        QSrhaUFm4WlBzuFpQc7haUGW4WlBoOFpQf/haUFk4WlBCOFpQZ7haUGkAAAAAOFpQSLhaUH/4WlBMgAA
        AADhaUFC4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQWThaUGE4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH84WlBkuFpQVjhaUEi4WlBBAAAAADhaUEA4WlBFOFpQU7haUGQ4WlB1uFpQaYAAAAA4WlBIuFp
        Qf/haUEyAAAAAOFpQULhaUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlBpuFpQbThaUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH04WlBtOFpQVLhaUECAAAAAAAAAADhaUEO4WlBfuFp
        QYDhaUEo4WlB/+FpQTIAAAAA4WlBQuFpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUHW4WlB0OFp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQcjhaUEoAAAAAAAA
        AAAAAAAA4WlBMOFpQazhaUH/4WlBMgAAAADhaUFC4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+Fp
        QezhaUHa4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+Fp
        QfDhaUFCAAAAAAAAAAAAAAAA4WlBGOFpQdbhaUEyAAAAAOFpQUThaUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB7uFpQdrhaUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQfThaUEyAAAAAAAAAAAAAAAA4WlBIOFpQYgAAAAA4WlBROFpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUHu4WlB0OFpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQdjhaUEIAAAAAAAAAAAAAAAA4WlBXuFpQUbhaUFG4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQe7haUG04WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQXYAAAAAAAAAAAAAAADhaUEC4WlBoOFp
        QUbhaUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB1uFpQYThaUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB5OFpQQQAAAAAAAAAAAAA
        AADhaUFw4WlBfOFpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUGk4WlBQOFpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlBPAAA
        AAAAAAAAAAAAAOFpQSLhaUHS4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQWLhaUEC4WlB5uFp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlBlOFp
        QXDhaUEsAAAAAAAAAAAAAAAA4WlBAOFpQW7haUGK4WlB/OFpQf/haUH/4WlB/+FpQf/haUH44WlBFAAA
        AADhaUGA4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUHo4WlBNAAAAAAAAAAAAAAAAAAAAAAAAAAA4WlBJuFpQdzhaUH/4WlB/+FpQf/haUH/4WlB/+Fp
        QaQAAAAAAAAAAOFpQRLhaUHu4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUHy4WlBSgAAAAAAAAAAAAAAAOFpQTrhaUHq4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH64WlBKgAAAAAAAAAAAAAAAOFpQWzhaUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH64WlBaAAAAADhaUFS4WlB9OFpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQZAAAAAAAAAAAAAAAAAAAAAA4WlBAuFpQbrhaUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlBuOFpQfzhaUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUHU4WlBCgAAAAAAAAAAAAAAAAAAAAAAAAAA4WlBFOFpQdjhaUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB6uFpQSYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4WlBHuFp
        QdrhaUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQerhaUEyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA4WlBFOFpQb7haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUHS4WlBJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA4WlBAuFpQXThaUHy4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH44WlBiuFpQQgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOFpQRjhaUGK4WlB7OFpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUHy4WlBmOFpQSIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADhaUEI4WlBSuFp
        QYzhaUG84WlB3uFpQezhaUHo4WlB3uFpQcLhaUGS4WlBUuFpQQoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//AP//+AAf//AAB//AAAP/gAAB/wAAAP4ZkyB+GbNwPBmzcDgZs3AYGb
        NwGBgzcBAP43AAAP1wAAA+cAAAH3AAAA+wAAAH8AAAB9AAAAPwCAAD4BgAB/AYAAfwHAAD4D4AAcA+AA
        AAfwAAAP+AAAH/wAAD//AAB//4AB///wD/8=
</value>
  </data>
</root>